{
  "openapi": "3.0.3",
  "info": {
    "title": "Ent Schema API",
    "description": "This is an auto generated API description made out of an Ent schema definition",
    "version": "0.1.0"
  },
  "paths": {
    "/master-account-categories": {
      "get": {
        "tags": [
          "MasterAccountCategory"
        ],
        "summary": "List MasterAccountCategories",
        "description": "List MasterAccountCategories.",
        "operationId": "listMasterAccountCategory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result MasterAccountCategory list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterAccountCategoryList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "MasterAccountCategory"
        ],
        "summary": "Create a new MasterAccountCategory",
        "description": "Creates a new MasterAccountCategory and persists it to storage.",
        "operationId": "createMasterAccountCategory",
        "requestBody": {
          "description": "MasterAccountCategory to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_type_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "accounts": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "account_type_id",
                  "name",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MasterAccountCategory created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountCategoryCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/master-account-categories/{id}": {
      "get": {
        "tags": [
          "MasterAccountCategory"
        ],
        "summary": "Find a MasterAccountCategory by ID",
        "description": "Finds the MasterAccountCategory with the requested ID and returns it.",
        "operationId": "readMasterAccountCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MasterAccountCategory with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountCategoryRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "MasterAccountCategory"
        ],
        "summary": "Deletes a MasterAccountCategory by ID",
        "description": "Deletes the MasterAccountCategory with the requested ID.",
        "operationId": "deleteMasterAccountCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "MasterAccountCategory with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "MasterAccountCategory"
        ],
        "summary": "Updates a MasterAccountCategory",
        "description": "Updates a MasterAccountCategory and persists changes to storage.",
        "operationId": "updateMasterAccountCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "MasterAccountCategory properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_type_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "accounts": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MasterAccountCategory updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountCategoryUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/master-account-categories/{id}/accounts": {
      "get": {
        "tags": [
          "MasterAccountCategory"
        ],
        "summary": "List attached Accounts",
        "description": "List attached Accounts.",
        "operationId": "listMasterAccountCategoryAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result MasterAccountCategories list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterAccountCategory_AccountsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/master-account-types": {
      "get": {
        "tags": [
          "MasterAccountType"
        ],
        "summary": "List MasterAccountTypes",
        "description": "List MasterAccountTypes.",
        "operationId": "listMasterAccountType",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result MasterAccountType list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterAccountTypeList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "MasterAccountType"
        ],
        "summary": "Create a new MasterAccountType",
        "description": "Creates a new MasterAccountType and persists it to storage.",
        "operationId": "createMasterAccountType",
        "requestBody": {
          "description": "MasterAccountType to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "name",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MasterAccountType created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountTypeCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/master-account-types/{id}": {
      "get": {
        "tags": [
          "MasterAccountType"
        ],
        "summary": "Find a MasterAccountType by ID",
        "description": "Finds the MasterAccountType with the requested ID and returns it.",
        "operationId": "readMasterAccountType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccountType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MasterAccountType with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountTypeRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "MasterAccountType"
        ],
        "summary": "Deletes a MasterAccountType by ID",
        "description": "Deletes the MasterAccountType with the requested ID.",
        "operationId": "deleteMasterAccountType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccountType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "MasterAccountType with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "MasterAccountType"
        ],
        "summary": "Updates a MasterAccountType",
        "description": "Updates a MasterAccountType and persists changes to storage.",
        "operationId": "updateMasterAccountType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccountType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "MasterAccountType properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MasterAccountType updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountTypeUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/master-accounts": {
      "get": {
        "tags": [
          "MasterAccount"
        ],
        "summary": "List MasterAccounts",
        "description": "List MasterAccounts.",
        "operationId": "listMasterAccount",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result MasterAccount list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterAccountList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "MasterAccount"
        ],
        "summary": "Create a new MasterAccount",
        "description": "Creates a new MasterAccount and persists it to storage.",
        "operationId": "createMasterAccount",
        "requestBody": {
          "description": "MasterAccount to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_id": {
                    "type": "integer"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "category_id",
                  "name",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MasterAccount created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/master-accounts/{id}": {
      "get": {
        "tags": [
          "MasterAccount"
        ],
        "summary": "Find a MasterAccount by ID",
        "description": "Finds the MasterAccount with the requested ID and returns it.",
        "operationId": "readMasterAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccount",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MasterAccount with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "MasterAccount"
        ],
        "summary": "Deletes a MasterAccount by ID",
        "description": "Deletes the MasterAccount with the requested ID.",
        "operationId": "deleteMasterAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccount",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "MasterAccount with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "MasterAccount"
        ],
        "summary": "Updates a MasterAccount",
        "description": "Updates a MasterAccount and persists changes to storage.",
        "operationId": "updateMasterAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterAccount",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "MasterAccount properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_id": {
                    "type": "integer"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MasterAccount updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterAccountUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/master-event-types": {
      "get": {
        "tags": [
          "MasterEventType"
        ],
        "summary": "List MasterEventTypes",
        "description": "List MasterEventTypes.",
        "operationId": "listMasterEventType",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result MasterEventType list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterEventTypeList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "MasterEventType"
        ],
        "summary": "Create a new MasterEventType",
        "description": "Creates a new MasterEventType and persists it to storage.",
        "operationId": "createMasterEventType",
        "requestBody": {
          "description": "MasterEventType to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MasterEventType created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEventTypeCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/master-event-types/{id}": {
      "get": {
        "tags": [
          "MasterEventType"
        ],
        "summary": "Find a MasterEventType by ID",
        "description": "Finds the MasterEventType with the requested ID and returns it.",
        "operationId": "readMasterEventType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterEventType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MasterEventType with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEventTypeRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "MasterEventType"
        ],
        "summary": "Deletes a MasterEventType by ID",
        "description": "Deletes the MasterEventType with the requested ID.",
        "operationId": "deleteMasterEventType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterEventType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "MasterEventType with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "MasterEventType"
        ],
        "summary": "Updates a MasterEventType",
        "description": "Updates a MasterEventType and persists changes to storage.",
        "operationId": "updateMasterEventType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MasterEventType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "MasterEventType properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MasterEventType updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterEventTypeUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-account-categories": {
      "get": {
        "tags": [
          "OrganizationAccountCategory"
        ],
        "summary": "List OrganizationAccountCategories",
        "description": "List OrganizationAccountCategories.",
        "operationId": "listOrganizationAccountCategory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OrganizationAccountCategory list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAccountCategoryList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "OrganizationAccountCategory"
        ],
        "summary": "Create a new OrganizationAccountCategory",
        "description": "Creates a new OrganizationAccountCategory and persists it to storage.",
        "operationId": "createOrganizationAccountCategory",
        "requestBody": {
          "description": "OrganizationAccountCategory to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_type_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "accounts": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "type": {
                    "type": "integer"
                  }
                },
                "required": [
                  "account_type_id",
                  "name",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationAccountCategory created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountCategoryCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-account-categories/{id}": {
      "get": {
        "tags": [
          "OrganizationAccountCategory"
        ],
        "summary": "Find a OrganizationAccountCategory by ID",
        "description": "Finds the OrganizationAccountCategory with the requested ID and returns it.",
        "operationId": "readOrganizationAccountCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationAccountCategory with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountCategoryRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "OrganizationAccountCategory"
        ],
        "summary": "Deletes a OrganizationAccountCategory by ID",
        "description": "Deletes the OrganizationAccountCategory with the requested ID.",
        "operationId": "deleteOrganizationAccountCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OrganizationAccountCategory with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "OrganizationAccountCategory"
        ],
        "summary": "Updates a OrganizationAccountCategory",
        "description": "Updates a OrganizationAccountCategory and persists changes to storage.",
        "operationId": "updateOrganizationAccountCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "OrganizationAccountCategory properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_type_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "accounts": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "type": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationAccountCategory updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountCategoryUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-account-categories/{id}/accounts": {
      "get": {
        "tags": [
          "OrganizationAccountCategory"
        ],
        "summary": "List attached Accounts",
        "description": "List attached Accounts.",
        "operationId": "listOrganizationAccountCategoryAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OrganizationAccountCategories list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAccountCategory_AccountsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-account-categories/{id}/type": {
      "get": {
        "tags": [
          "OrganizationAccountCategory"
        ],
        "summary": "Find the attached OrganizationAccountType",
        "description": "Find the attached OrganizationAccountType of the OrganizationAccountCategory with the given ID",
        "operationId": "readOrganizationAccountCategoryType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountCategory",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationAccountType attached to OrganizationAccountCategory with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountCategory_TypeRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-account-types": {
      "get": {
        "tags": [
          "OrganizationAccountType"
        ],
        "summary": "List OrganizationAccountTypes",
        "description": "List OrganizationAccountTypes.",
        "operationId": "listOrganizationAccountType",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OrganizationAccountType list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAccountTypeList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "OrganizationAccountType"
        ],
        "summary": "Create a new OrganizationAccountType",
        "description": "Creates a new OrganizationAccountType and persists it to storage.",
        "operationId": "createOrganizationAccountType",
        "requestBody": {
          "description": "OrganizationAccountType to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "organization_id",
                  "name",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationAccountType created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountTypeCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-account-types/{id}": {
      "get": {
        "tags": [
          "OrganizationAccountType"
        ],
        "summary": "Find a OrganizationAccountType by ID",
        "description": "Finds the OrganizationAccountType with the requested ID and returns it.",
        "operationId": "readOrganizationAccountType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationAccountType with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountTypeRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "OrganizationAccountType"
        ],
        "summary": "Deletes a OrganizationAccountType by ID",
        "description": "Deletes the OrganizationAccountType with the requested ID.",
        "operationId": "deleteOrganizationAccountType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OrganizationAccountType with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "OrganizationAccountType"
        ],
        "summary": "Updates a OrganizationAccountType",
        "description": "Updates a OrganizationAccountType and persists changes to storage.",
        "operationId": "updateOrganizationAccountType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "OrganizationAccountType properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationAccountType updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountTypeUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-account-types/{id}/categories": {
      "get": {
        "tags": [
          "OrganizationAccountType"
        ],
        "summary": "List attached Categories",
        "description": "List attached Categories.",
        "operationId": "listOrganizationAccountTypeCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccountType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OrganizationAccountTypes list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAccountType_CategoriesList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-accounts": {
      "get": {
        "tags": [
          "OrganizationAccount"
        ],
        "summary": "List OrganizationAccounts",
        "description": "List OrganizationAccounts.",
        "operationId": "listOrganizationAccount",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OrganizationAccount list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAccountList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "OrganizationAccount"
        ],
        "summary": "Create a new OrganizationAccount",
        "description": "Creates a new OrganizationAccount and persists it to storage.",
        "operationId": "createOrganizationAccount",
        "requestBody": {
          "description": "OrganizationAccount to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_id": {
                    "type": "integer"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "transactions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "acccategory": {
                    "type": "integer"
                  }
                },
                "required": [
                  "category_id",
                  "name",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationAccount created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-accounts/{id}": {
      "get": {
        "tags": [
          "OrganizationAccount"
        ],
        "summary": "Find a OrganizationAccount by ID",
        "description": "Finds the OrganizationAccount with the requested ID and returns it.",
        "operationId": "readOrganizationAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccount",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationAccount with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "OrganizationAccount"
        ],
        "summary": "Deletes a OrganizationAccount by ID",
        "description": "Deletes the OrganizationAccount with the requested ID.",
        "operationId": "deleteOrganizationAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccount",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OrganizationAccount with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "OrganizationAccount"
        ],
        "summary": "Updates a OrganizationAccount",
        "description": "Updates a OrganizationAccount and persists changes to storage.",
        "operationId": "updateOrganizationAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccount",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "OrganizationAccount properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_id": {
                    "type": "integer"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "transactions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "acccategory": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationAccount updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccountUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-accounts/{id}/acccategory": {
      "get": {
        "tags": [
          "OrganizationAccount"
        ],
        "summary": "Find the attached OrganizationAccountCategory",
        "description": "Find the attached OrganizationAccountCategory of the OrganizationAccount with the given ID",
        "operationId": "readOrganizationAccountAcccategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccount",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationAccountCategory attached to OrganizationAccount with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAccount_AcccategoryRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-accounts/{id}/transactions": {
      "get": {
        "tags": [
          "OrganizationAccount"
        ],
        "summary": "List attached Transactions",
        "description": "List attached Transactions.",
        "operationId": "listOrganizationAccountTransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationAccount",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OrganizationAccounts list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAccount_TransactionsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-event-types": {
      "get": {
        "tags": [
          "OrganizationEventType"
        ],
        "summary": "List OrganizationEventTypes",
        "description": "List OrganizationEventTypes.",
        "operationId": "listOrganizationEventType",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OrganizationEventType list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationEventTypeList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "OrganizationEventType"
        ],
        "summary": "Create a new OrganizationEventType",
        "description": "Creates a new OrganizationEventType and persists it to storage.",
        "operationId": "createOrganizationEventType",
        "requestBody": {
          "description": "OrganizationEventType to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "organization_id",
                  "name",
                  "description",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationEventType created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationEventTypeCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-event-types/{id}": {
      "get": {
        "tags": [
          "OrganizationEventType"
        ],
        "summary": "Find a OrganizationEventType by ID",
        "description": "Finds the OrganizationEventType with the requested ID and returns it.",
        "operationId": "readOrganizationEventType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationEventType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationEventType with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationEventTypeRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "OrganizationEventType"
        ],
        "summary": "Deletes a OrganizationEventType by ID",
        "description": "Deletes the OrganizationEventType with the requested ID.",
        "operationId": "deleteOrganizationEventType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationEventType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OrganizationEventType with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "OrganizationEventType"
        ],
        "summary": "Updates a OrganizationEventType",
        "description": "Updates a OrganizationEventType and persists changes to storage.",
        "operationId": "updateOrganizationEventType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationEventType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "OrganizationEventType properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationEventType updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationEventTypeUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List Organizations",
        "description": "List Organizations.",
        "operationId": "listOrganization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organization list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Create a new Organization",
        "description": "Creates a new Organization and persists it to storage.",
        "operationId": "createOrganization",
        "requestBody": {
          "description": "Organization to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "public_id": {
                    "type": "string"
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "accounttypes": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "eventtypes": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "name",
                  "created_at",
                  "public_id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Organization created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Find a Organization by ID",
        "description": "Finds the Organization with the requested ID and returns it.",
        "operationId": "readOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Deletes a Organization by ID",
        "description": "Deletes the Organization with the requested ID.",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Organization with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Organization"
        ],
        "summary": "Updates a Organization",
        "description": "Updates a Organization and persists changes to storage.",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Organization properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "public_id": {
                    "type": "string"
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "accounttypes": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "eventtypes": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Organization updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/accounttypes": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Accounttypes",
        "description": "List attached Accounttypes.",
        "operationId": "listOrganizationAccounttypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_AccounttypesList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/eventtypes": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Eventtypes",
        "description": "List attached Eventtypes.",
        "operationId": "listOrganizationEventtypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_EventtypesList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/users": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Users",
        "description": "List attached Users.",
        "operationId": "listOrganizationUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_UsersList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "List Transactions",
        "description": "List Transactions.",
        "operationId": "listTransaction",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Transaction list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Create a new Transaction",
        "description": "Creates a new Transaction and persists it to storage.",
        "operationId": "createTransaction",
        "requestBody": {
          "description": "Transaction to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "transaction_type": {
                    "type": "string",
                    "enum": [
                      "DEBIT",
                      "CREDIT"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "account": {
                    "type": "integer"
                  }
                },
                "required": [
                  "transaction_date",
                  "transaction_type",
                  "amount",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Find a Transaction by ID",
        "description": "Finds the Transaction with the requested ID and returns it.",
        "operationId": "readTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Transaction",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Transaction"
        ],
        "summary": "Deletes a Transaction by ID",
        "description": "Deletes the Transaction with the requested ID.",
        "operationId": "deleteTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Transaction",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Transaction"
        ],
        "summary": "Updates a Transaction",
        "description": "Updates a Transaction and persists changes to storage.",
        "operationId": "updateTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Transaction",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Transaction properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "transaction_type": {
                    "type": "string",
                    "enum": [
                      "DEBIT",
                      "CREDIT"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "account": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/transactions/{id}/account": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Find the attached OrganizationAccount",
        "description": "Find the attached OrganizationAccount of the Transaction with the given ID",
        "operationId": "readTransactionAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Transaction",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationAccount attached to Transaction with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction_AccountRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List Users",
        "description": "List Users.",
        "operationId": "listUser",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result User list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new User",
        "description": "Creates a new User and persists it to storage.",
        "operationId": "createUser",
        "requestBody": {
          "description": "User to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "organizations": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "email",
                  "name",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find a User by ID",
        "description": "Finds the User with the requested ID and returns it.",
        "operationId": "readUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes a User by ID",
        "description": "Deletes the User with the requested ID.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Updates a User",
        "description": "Updates a User and persists changes to storage.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "User properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "organizations": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/organizations": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List attached Organizations",
        "description": "List attached Organizations.",
        "operationId": "listUserOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User_OrganizationsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MasterAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MasterAccount"
            }
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountCategoryCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountCategoryList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountCategoryRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountCategoryUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountCategory_AccountsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountTypeCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountTypeList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountTypeRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountTypeUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "created_at"
        ]
      },
      "MasterAccountUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "MasterEventType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "created_at"
        ]
      },
      "MasterEventTypeCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "created_at"
        ]
      },
      "MasterEventTypeList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "created_at"
        ]
      },
      "MasterEventTypeRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "created_at"
        ]
      },
      "MasterEventTypeUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "created_at"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "public_id": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "accounttypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccountType"
            }
          },
          "eventtypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationEventType"
            }
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "public_id"
        ]
      },
      "OrganizationAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "acccategory": {
            "$ref": "#/components/schemas/OrganizationAccountCategory"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccount"
            }
          },
          "type": {
            "$ref": "#/components/schemas/OrganizationAccountType"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountCategoryCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountCategoryList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountCategoryRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountCategoryUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountCategory_AccountsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountCategory_TypeRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccountCategory"
            }
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountTypeCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountTypeList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountTypeRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountTypeUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountType_CategoriesList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccountUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccount_AcccategoryRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_type_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "account_type_id",
          "name",
          "created_at"
        ]
      },
      "OrganizationAccount_TransactionsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "transaction_date",
          "transaction_type",
          "amount",
          "created_at"
        ]
      },
      "OrganizationCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "public_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "public_id"
        ]
      },
      "OrganizationEventType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "description",
          "created_at"
        ]
      },
      "OrganizationEventTypeCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "description",
          "created_at"
        ]
      },
      "OrganizationEventTypeList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "description",
          "created_at"
        ]
      },
      "OrganizationEventTypeRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "description",
          "created_at"
        ]
      },
      "OrganizationEventTypeUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "description",
          "created_at"
        ]
      },
      "OrganizationList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "public_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "public_id"
        ]
      },
      "OrganizationRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "public_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "public_id"
        ]
      },
      "OrganizationUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "public_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "public_id"
        ]
      },
      "Organization_AccounttypesList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "created_at"
        ]
      },
      "Organization_EventtypesList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organization_id",
          "name",
          "description",
          "created_at"
        ]
      },
      "Organization_UsersList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "created_at"
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/OrganizationAccount"
          }
        },
        "required": [
          "id",
          "transaction_date",
          "transaction_type",
          "amount",
          "created_at"
        ]
      },
      "TransactionCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "transaction_date",
          "transaction_type",
          "amount",
          "created_at"
        ]
      },
      "TransactionList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "transaction_date",
          "transaction_type",
          "amount",
          "created_at"
        ]
      },
      "TransactionRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "transaction_date",
          "transaction_type",
          "amount",
          "created_at"
        ]
      },
      "TransactionUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "transaction_date",
          "transaction_type",
          "amount",
          "created_at"
        ]
      },
      "Transaction_AccountRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "category_id",
          "name",
          "created_at"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            }
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "created_at"
        ]
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "created_at"
        ]
      },
      "UserList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "created_at"
        ]
      },
      "UserRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "created_at"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "created_at"
        ]
      },
      "User_OrganizationsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "public_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "public_id"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "403": {
        "description": "insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      }
    }
  }
}