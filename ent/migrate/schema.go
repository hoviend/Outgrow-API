// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "amount", Type: field.TypeFloat64, Default: 0},
		{Name: "notes", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "organization_id", Type: field.TypeUUID},
		{Name: "event_type_id", Type: field.TypeInt},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "events_organizations_events",
				Columns:    []*schema.Column{EventsColumns[4]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "events_organization_event_types_events",
				Columns:    []*schema.Column{EventsColumns[5]},
				RefColumns: []*schema.Column{OrganizationEventTypesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MasterAccountsColumns holds the columns for the "master_accounts" table.
	MasterAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "category_id", Type: field.TypeInt},
	}
	// MasterAccountsTable holds the schema information for the "master_accounts" table.
	MasterAccountsTable = &schema.Table{
		Name:       "master_accounts",
		Columns:    MasterAccountsColumns,
		PrimaryKey: []*schema.Column{MasterAccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "master_accounts_master_account_categories_accounts",
				Columns:    []*schema.Column{MasterAccountsColumns[3]},
				RefColumns: []*schema.Column{MasterAccountCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MasterAccountCategoriesColumns holds the columns for the "master_account_categories" table.
	MasterAccountCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "account_type_id", Type: field.TypeInt},
	}
	// MasterAccountCategoriesTable holds the schema information for the "master_account_categories" table.
	MasterAccountCategoriesTable = &schema.Table{
		Name:       "master_account_categories",
		Columns:    MasterAccountCategoriesColumns,
		PrimaryKey: []*schema.Column{MasterAccountCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "master_account_categories_master_account_types_categories",
				Columns:    []*schema.Column{MasterAccountCategoriesColumns[4]},
				RefColumns: []*schema.Column{MasterAccountTypesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MasterAccountTypesColumns holds the columns for the "master_account_types" table.
	MasterAccountTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
	}
	// MasterAccountTypesTable holds the schema information for the "master_account_types" table.
	MasterAccountTypesTable = &schema.Table{
		Name:       "master_account_types",
		Columns:    MasterAccountTypesColumns,
		PrimaryKey: []*schema.Column{MasterAccountTypesColumns[0]},
	}
	// MasterEventTypesColumns holds the columns for the "master_event_types" table.
	MasterEventTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "rules", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
	}
	// MasterEventTypesTable holds the schema information for the "master_event_types" table.
	MasterEventTypesTable = &schema.Table{
		Name:       "master_event_types",
		Columns:    MasterEventTypesColumns,
		PrimaryKey: []*schema.Column{MasterEventTypesColumns[0]},
	}
	// OrganizationsColumns holds the columns for the "organizations" table.
	OrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "public_id", Type: field.TypeString, Unique: true},
	}
	// OrganizationsTable holds the schema information for the "organizations" table.
	OrganizationsTable = &schema.Table{
		Name:       "organizations",
		Columns:    OrganizationsColumns,
		PrimaryKey: []*schema.Column{OrganizationsColumns[0]},
	}
	// OrganizationAccountsColumns holds the columns for the "organization_accounts" table.
	OrganizationAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "balance", Type: field.TypeFloat64, Default: 0},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "category_id", Type: field.TypeInt},
	}
	// OrganizationAccountsTable holds the schema information for the "organization_accounts" table.
	OrganizationAccountsTable = &schema.Table{
		Name:       "organization_accounts",
		Columns:    OrganizationAccountsColumns,
		PrimaryKey: []*schema.Column{OrganizationAccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "organization_accounts_organization_account_categories_accounts",
				Columns:    []*schema.Column{OrganizationAccountsColumns[5]},
				RefColumns: []*schema.Column{OrganizationAccountCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OrganizationAccountCategoriesColumns holds the columns for the "organization_account_categories" table.
	OrganizationAccountCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "account_type_id", Type: field.TypeInt},
	}
	// OrganizationAccountCategoriesTable holds the schema information for the "organization_account_categories" table.
	OrganizationAccountCategoriesTable = &schema.Table{
		Name:       "organization_account_categories",
		Columns:    OrganizationAccountCategoriesColumns,
		PrimaryKey: []*schema.Column{OrganizationAccountCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "organization_account_categories_organization_account_types_categories",
				Columns:    []*schema.Column{OrganizationAccountCategoriesColumns[4]},
				RefColumns: []*schema.Column{OrganizationAccountTypesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OrganizationAccountTypesColumns holds the columns for the "organization_account_types" table.
	OrganizationAccountTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "organization_id", Type: field.TypeUUID},
	}
	// OrganizationAccountTypesTable holds the schema information for the "organization_account_types" table.
	OrganizationAccountTypesTable = &schema.Table{
		Name:       "organization_account_types",
		Columns:    OrganizationAccountTypesColumns,
		PrimaryKey: []*schema.Column{OrganizationAccountTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "organization_account_types_organizations_accountTypes",
				Columns:    []*schema.Column{OrganizationAccountTypesColumns[3]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OrganizationEventTypesColumns holds the columns for the "organization_event_types" table.
	OrganizationEventTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "rules", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "organization_id", Type: field.TypeUUID},
	}
	// OrganizationEventTypesTable holds the schema information for the "organization_event_types" table.
	OrganizationEventTypesTable = &schema.Table{
		Name:       "organization_event_types",
		Columns:    OrganizationEventTypesColumns,
		PrimaryKey: []*schema.Column{OrganizationEventTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "organization_event_types_organizations_eventTypes",
				Columns:    []*schema.Column{OrganizationEventTypesColumns[5]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "transaction_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "DATE"}},
		{Name: "transaction_type", Type: field.TypeEnum, Enums: []string{"DEBIT", "CREDIT"}},
		{Name: "amount", Type: field.TypeFloat64, Default: 0},
		{Name: "notes", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "event_id", Type: field.TypeUUID},
		{Name: "account_id", Type: field.TypeInt},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_events_transactions",
				Columns:    []*schema.Column{TransactionsColumns[6]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "transactions_organization_accounts_transactions",
				Columns:    []*schema.Column{TransactionsColumns[7]},
				RefColumns: []*schema.Column{OrganizationAccountsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// OrganizationUsersColumns holds the columns for the "organization_users" table.
	OrganizationUsersColumns = []*schema.Column{
		{Name: "organization_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// OrganizationUsersTable holds the schema information for the "organization_users" table.
	OrganizationUsersTable = &schema.Table{
		Name:       "organization_users",
		Columns:    OrganizationUsersColumns,
		PrimaryKey: []*schema.Column{OrganizationUsersColumns[0], OrganizationUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "organization_users_organization_id",
				Columns:    []*schema.Column{OrganizationUsersColumns[0]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "organization_users_user_id",
				Columns:    []*schema.Column{OrganizationUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EventsTable,
		MasterAccountsTable,
		MasterAccountCategoriesTable,
		MasterAccountTypesTable,
		MasterEventTypesTable,
		OrganizationsTable,
		OrganizationAccountsTable,
		OrganizationAccountCategoriesTable,
		OrganizationAccountTypesTable,
		OrganizationEventTypesTable,
		TransactionsTable,
		UsersTable,
		OrganizationUsersTable,
	}
)

func init() {
	EventsTable.ForeignKeys[0].RefTable = OrganizationsTable
	EventsTable.ForeignKeys[1].RefTable = OrganizationEventTypesTable
	MasterAccountsTable.ForeignKeys[0].RefTable = MasterAccountCategoriesTable
	MasterAccountCategoriesTable.ForeignKeys[0].RefTable = MasterAccountTypesTable
	OrganizationAccountsTable.ForeignKeys[0].RefTable = OrganizationAccountCategoriesTable
	OrganizationAccountCategoriesTable.ForeignKeys[0].RefTable = OrganizationAccountTypesTable
	OrganizationAccountTypesTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationEventTypesTable.ForeignKeys[0].RefTable = OrganizationsTable
	TransactionsTable.ForeignKeys[0].RefTable = EventsTable
	TransactionsTable.ForeignKeys[1].RefTable = OrganizationAccountsTable
	OrganizationUsersTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationUsersTable.ForeignKeys[1].RefTable = UsersTable
}
